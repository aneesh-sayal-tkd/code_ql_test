name: "CodeQL C++ Scan"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly run

jobs:
  analyze:
    name: Analyze C++ Code
    runs-on: ubuntu-22.04
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: c-cpp
            build-mode: manual

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          build-mode: ${{ matrix.build-mode }}
          queries: security-extended,security-and-quality

      - name: Build C++ code
        if: matrix.build-mode == 'manual'
        run: |
          g++ -o myapp src/*.cpp

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"
          output: results

      - name: Fail if critical/high CodeQL issues exist
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          SARIF_FILE=$(find results -name '*.sarif')
          echo "Checking SARIF: $SARIF_FILE"
      
          echo "üß™ SARIF Issue Summary:"
          jq '.runs[].results[] | {message: .message.text, level: .level}' "$SARIF_FILE"
      
          # Fail on any level (for test purposes)
          count=$(jq '[.runs[].results[] | select(.level=="error" or .level=="warning" or .level=="note")] | length' "$SARIF_FILE")
          echo "Number of total issues: $count"
      
          if [ "$count" -gt 0 ]; then
            echo "‚ùå Found $count issue(s). Failing pipeline."
            exit 1
          else
            echo "‚úÖ No issues found."
          fi
